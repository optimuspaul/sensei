# this is the sensei API
swagger: '2.0'
info:
  title: Sensei API
  description: Augmenting classroom observation.
  version: "1.0.0"
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Requires `HTTPS`
  apiKeyAuth:
    type: apiKey
    name: X-SenseiToken
    in: header
paths:
  /radio_observations:
    post:
      summary: Upload radio observations.
      description: |
        The Radio Observations endpoint provides a way to upload radio observations from sensors to the sensei platform.  All observations in a single post must share the same observed_at time and classroom_id.
      consumes:
        - application/json
      parameters:
        - name: events
          in: body
          description: List of radio observations.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/RadioObservation'
      tags:
        - RadioObservation
      security:
        - basicAuth: []
        - apiKeyAuth: []
      responses:
        201:
          description: Upload accepted
        401:
          description: Unauthorized
    get:
      summary: Returns radio observations.
      produces:
        - application/json
      parameters:
        - name: classroom_id
          in: query
          description: The id of the classroom to retrieve observations for.
          required: true
          type: integer
        - name: entity_id
          in: query
          description: The id of the entity to retrieve observations for.
          required: true
          type: integer
        - name: entity_type
          in: query
          description: "The type of entity that entity_id references."
          required: true
          type: string
          enum:
            - child
            - teacher
            - material
            - area
        - name: start_time
          in: query
          type: string
          required: true
          description: Obs after this date will be retrieved. iso8601 format. Example '2002-12-25T12:15:05'.
        - name: end_time
          in: query
          required: true
          type: string
          description: Obs before this date will be retrieved. iso8601 format. Example '2002-12-25T12:15:05'.
        - name: as_matrix
          in: query
          required: false
          type: string
          default: "True"
          enum:
            - "True"
            - "False"
          description: If this flag is provided and set to 'False', a flatter version of the obs will be returned.
      tags:
        - RadioObservation
      security:
        - basicAuth: []
      responses:
        '200':
          description: Radio observations in a matrix; dimensions are relationship, time, and direction.  The indexes are provided as separate attributes.
        401:
          description: Unauthorized
  /accelerometer_observations:
    post:
      summary: Upload accelerometer observations.
      description: |
        The Accelerometer Observations endpoint provides a way to upload accelerometer observations from sensors to the sensei platform.
      consumes:
        - application/json
      parameters:
        - name: events
          in: body
          description: List of accelerometer observations.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AccelerometerObservation'
      tags:
        - AccelerometerObservation
      security:
        - basicAuth: []
        - apiKeyAuth: []
      responses:
        201:
          description: Upload accepted
        401:
          description: Unauthorized
    get:
      summary: Returns accelerometer observations.
      produces:
        - application/json
      parameters:
        - name: classroom_id
          in: query
          description: The id of the classroom to retrieve observations for.
          required: true
          type: integer
        - name: entity_id
          in: query
          description: The id of the entity to retrieve observations for.
          required: true
          type: integer
        - name: entity_type
          in: query
          description: The type of the entity to retrieve observations for.
          required: true
          type: string
          enum: [ "child", "teacher", "material", "area"]
        - name: start_time
          in: query
          type: string
          required: true
          description: Obs after this date will be retrieved. iso8601 format. Example '2002-12-25T12:15:05'.
        - name: end_time
          in: query
          required: true
          type: string
          description: Obs before this date will be retrieved. iso8601 format. Example '2002-12-25T12:15:05'.
      tags:
        - AccelerometerObservation
      security:
        - basicAuth: []
      responses:
        '200':
          description: Accelerometer observations in a matrix; dimensions are relationship, time, and direction.  The indexes are provided as separate attributes.
        401:
          description: Unauthorized
  /accelerometer_events:
    post:
      summary: Upload accelerometer events.
      description: |
        The Accelerometer Events endpoint provides a way to upload accelerometer events (i.e. "jostle") from sensors to the sensei platform.
      consumes:
        - application/json
      parameters:
        - name: events
          in: body
          description: List of accelerometer events.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AccelerometerEvent'
      tags:
        - AccelerometerEvent
      security:
        - basicAuth: []
        - apiKeyAuth: []
      responses:
        201:
          description: Upload accepted
        401:
          description: Unauthorized
    get:
      summary: Returns accelerometer events.
      produces:
        - application/json
      parameters:
        - name: classroom_id
          in: query
          description: The id of the classroom to retrieve events for.
          required: true
          type: integer
        - name: entity_id
          in: query
          description: The id of the entity to retrieve events for.
          required: true
          type: integer
        - name: entity_type
          in: query
          description: The type of the entity to retrieve events for.
          required: true
          type: string
          enum: [ "child", "teacher", "material", "area"]
        - name: start_time
          in: query
          type: string
          required: true
          description: Obs after this date will be retrieved. iso8601 format. Example '2002-12-25T12:15:05'.
        - name: end_time
          in: query
          required: true
          type: string
          description: Obs before this date will be retrieved. iso8601 format. Example '2002-12-25T12:15:05'.
      tags:
        - AccelerometerEvent
      security:
        - basicAuth: []
      responses:
        '200':
          description: A list of accelerometer events that contain the date and time of the event in iso8601 format and the type of event observed. Example [['2002-12-25T12:15:05', 'jostle'], ['2002-12-24T12:17:30', 'drop']].
        401:
          description: Unauthorized
  /interaction_periods:
    get:
      summary: Fetch interaction periods
      description: Returns interaction periods between a given entity and all other entities in a given classroom. Interaction periods are determined by taking a running average of radio observation points within a given period of time to get a start and end time to be visualized as one continuous interaction.
      produces:
        - application/json
      parameters:
        - name: classroom_id
          in: query
          description: The id of the classroom to retrieve interaction periods for.
          required: true
          type: integer
        - name: entity_id
          in: query
          description: The id of the entity to retrieve interaction periods for.
          required: true
          type: integer
        - name: entity_type
          in: query
          description: The type of the entity to retrieve interaction periods for.
          required: true
          type: string
          enum: [ "child", "teacher", "material", "area"]
        - name: start_time
          in: query
          type: string
          format: date-time
          required: true
          description: Filters out periods that end before this date. iso8601 format. Example '2002-12-25T12:15:05'.
        - name: end_time
          in: query
          type: string
          format: date-time
          required: true
          description: Filters out periods that start after this date. iso8601 format. Example '2002-12-25T12:15:05'.
      tags:
        - InteractionPeriods
      security:
        - basicAuth: []
      responses:
        '200':
          description: Interaction periods, entities interacted with, and start/end timestamps.  The indexes are provided as separate attributes.
        401:
          description: Unauthorized
  /interaction_totals:
    get:
      summary: Returns interaction totals in minutes between a given entity and all other entities in a given classroom.
      produces:
        - application/json
      parameters:
        - name: classroom_id
          in: query
          description: The id of the classroom to retrieve interaction totals for.
          required: true
          type: integer
        - name: entity_id
          in: query
          description: The id of the entity to retrieve interaction totals for.
          required: true
          type: integer
        - name: entity_type
          in: query
          description: The type of the entity to retrieve interaction totals for.
          required: true
          type: string
          enum: [ "child", "teacher", "material", "area"]
        - name: start_time
          in: query
          type: string
          required: true
          description: Determines the date after which all interaction periods will be summed. iso8601 format. Example '2002-12-25T12:15:05'.
        - name: end_time
          in: query
          required: true
          type: string
          description: Determines the date before which all interaction periods will be summed. iso8601 format. Example '2002-12-25T12:15:05'.
      tags:
        - InteractionTotals
      security:
        - basicAuth: []
      responses:
        '200':
          description: Interaction totals, entities interacted with, and start/end timestamps.  The indexes are provided as separate attributes.
        401:
          description: Unauthorized
  /sensor_mappings:
    post:
      summary: Update mapping of sensor ids to children, teachers, materials, and classroom areas.
      description: |
        This endpoint is used to create and update mappings of sensors to physical entities, such as children, teachers, materials, or areas. To associate a sensor with a new entity, start_time and end_time should not be specified. The server will end any existing mapping of this sensor. To mark a sensor as not associated with any entity, the entity type and entity id fields should be left blank.
      consumes:
        - application/json
      parameters:
        - name: mapping
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SensorMapping'
      tags:
        - SensorMapping
      security:
        - basicAuth: []
      responses:
        201:
          description: Sensor mapping update accepted
        401:
          description: Unauthorized
    get:
      summary: Returns the current sensor mappings for the specified classroom.  Only active mappings will be returned.
      produces:
        - application/json
      parameters:
        - name: classroom_id
          in: query
          description: The id of the classroom to retrieve sensor mappings for.
          required: true
          type: integer
      tags:
        - SensorMapping
      security:
        - basicAuth: []
      responses:
        200:
          description: mappings
          schema:
            type: array
            items:
              $ref: '#/definitions/SensorMapping'
        401:
          description: Unauthorized
  /areas:
    post:
      summary: Create new area.
      consumes:
        - application/json
      parameters:
        - name: area
          in: body
          required: true
          schema:
            $ref: '#/definitions/Area'
      tags:
        - Area
      security:
        - basicAuth: []
      responses:
        201:
          description: Area created
        401:
          description: Unauthorized
    get:
      summary: Returns the areas defined for the specified classroom.
      produces:
        - application/json
      parameters:
        - name: classroom_id
          in: query
          description: The id of the classroom to retrieve areas for.
          required: true
          type: integer
      tags:
        - Area
      security:
        - basicAuth: []
      responses:
        '200':
          description: Areas
          schema:
            type: array
            items:
              $ref: '#/definitions/Area'
        401:
          description: Unauthorized
  /areas/{id}:
    put:
      summary: Update an area's name.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the area to update.
          required: true
          type: integer
        - name: mapping
          in: body
          description: Area.
          required: true
          schema:
            $ref: '#/definitions/Area'
      tags:
        - Area
      security:
        - basicAuth: []
      responses:
        '200':
          description: Area updated
          schema:
            $ref: '#/definitions/Area'
        401:
          description: Unauthorized
    delete:
      summary: Delete an area.
      parameters:
        - name: id
          in: path
          description: The id of the area to delete.
          required: true
          type: integer
      tags:
        - Area
      security:
        - basicAuth: []
      responses:
        '200':
          description: Area deleted
        401:
          description: Unauthorized
  /materials:
    post:
      summary: Create new material record.
      consumes:
        - application/json
      parameters:
        - name: material
          in: body
          required: true
          schema:
            $ref: '#/definitions/Material'
      tags:
        - Material
      security:
        - basicAuth: []
      responses:
        201:
          description: Material created
        401:
          description: Unauthorized
    get:
      summary: Returns the materials defined for the specified classroom.
      produces:
        - application/json
      parameters:
        - name: classroom_id
          in: query
          description: The id of the classroom to retrieve materials for.
          required: true
          type: integer
      tags:
        - Material
      security:
        - basicAuth: []
      responses:
        '200':
          description: Materials
          schema:
            type: array
            items:
              $ref: '#/definitions/Material'
        401:
          description: Unauthorized
  /materials/{id}:
    put:
      summary: Update a material's name.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the material to update.
          required: true
          type: integer
        - name: mapping
          in: body
          required: true
          schema:
            $ref: '#/definitions/Material'
      tags:
        - Material
      security:
        - basicAuth: []
      responses:
        '200':
          description: Material updated
          schema:
            $ref: '#/definitions/Material'
        401:
          description: Unauthorized
    delete:
      summary: Delete a material.
      parameters:
        - name: id
          in: path
          description: The id of the material to delete.
          required: true
          type: integer
      tags:
        - Material
      security:
        - basicAuth: []
      responses:
        '200':
          description: Material deleted
        401:
          description: Unauthorized
  /classrooms:
    get:
      summary: Returns the classrooms accessible to this user.
      produces:
        - application/json
      tags:
        - Classroom
      security:
        - basicAuth: []
      responses:
        '200':
          description: Classrooms
          schema:
            type: array
            items:
              $ref: '#/definitions/Classroom'
        401:
          description: Unauthorized
  /classrooms/{id}:
    put:
      summary: Update classroom metadata.
      description: |
        This is a proxy api that takes json data and applies it to the classroom's firebase location in the form of a generic unstructured document (javascript object). All changes are merges.
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the classroom to update.
          required: true
          type: integer
        - name: classroom
          in: body
          description: a json object containing metadata about the given classroom.
          required: true
          schema:
            type: object
      security:
        - basicAuth: []
        - apiKeyAuth: []
      responses:
        200:
          description: update accepted
  /entity_locations:
    post:
      summary: Upload location observations.
      description: |
        The Location Observations endpoint provides a way to upload location observations from sensors to firebase via the sensei platform.
      consumes:
        - application/json
      parameters:
        - name: events
          in: body
          description: List of location observations.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityLocation'
      tags:
        - EntityLocation
      security:
        - basicAuth: []
        - apiKeyAuth: []
      responses:
        201:
          description: Upload accepted
        401:
          description: Unauthorized

definitions:
  SensorMapping:
    type: object
    description: SensorMapping objects describe which sensors are mapped to which things, over a specific period of time.
    properties:
      classroom_id:
        type: integer
        description: Unique identifier for the classroom that the sensors involved belong to.
      sensor_id:
        type: integer
        description: Classroom specific sensor id of the sensor that is being mapped (0-255).
      start_time:
        type: string
        description: The starting time of the mapping, in iso8601 format. Example '2002-12-25T12:15:05'. If not set during a create, the current time will be used.
      end_time:
        type: string
        description: The ending time of the mapping, in iso8601 format. Example '2002-12-25T12:15:05'.  If not set, this indicates the current mapping.
      entity_type:
        type: string
        enum: [ "child", "teacher", "material", "area"]
        description: The type of mapping
      entity_id:
        type: integer
        description: The foreign key to
  RadioObservation:
    type: object
    description: Radio observations occur when when sensor receives a radio packet from another sensor. The receiver records the observed RSSI of the packet, along with the sender's id and a timestamp.
    properties:
      classroom_id:
        type: integer
        description: Unique identifier for the classroom that the sensors involved belong to.
      local_id:
        type: integer
        description: Classroom specific sensor id of the sensor that received and recorded the triggering packet (0-255).
      remote_id:
        type: integer
        description: The id of the sensor that sent the triggering packet (0-255).
      observed_at:
        type: string
        description: The timestamp of the event, in iso8601 format. Example '2002-12-25T12:15:05'
      rssi:
        type: number
        description: The signal strength, represented as a negative number of decibels.
  AccelerometerObservation:
    type: object
    description: Accelerometer observations occur when sensor records a physical movement as detected by its internal accelerometer. The receiver records the observed accelerations in the 3 spacial directions along with the sender's id and a timestamp.
    properties:
      classroom_id:
        type: integer
        description: Unique identifier for the classroom that the sensors involved belong to.
      sensor_id:
        type: integer
        description: Classroom specific sensor id of the sensor that received and recorded accelerometer event.
      observed_at:
        type: string
        description: The timestamp of the event, in iso8601 format. Example '2002-12-25T12:15:05'
      x_acceleration:
        type: number
        description: The acceleration in the x direction. Example '-9.81234'.
      y_acceleration:
        type: number
        description: The acceleration in the y direction. Example '-9.81234'.
      z_acceleration:
        type: number
        description: The acceleration in the z direction. Example '-9.81234'.
  EntityLocation:
    type: object
    description: Entity locations are generated using a statistical analysis of the entirety of all sensor interactions for a given classroom and contain an x coordinate, y coordinate, and "strength" representing the confidence level of the given coordinates.
    properties:
      classroom_id:
        type: integer
        description: Unique identifier for the classroom that the sensors involved belong to.
      sensor_id:
        type: integer
        description: Classroom specific sensor id of the sensor that received and recorded accelerometer event.
      observed_at:
        type: string
        description: The timestamp of the event, in iso8601 format. Example '2002-12-25T12:15:05'
      x:
        type: number
        description: The x position of the sensor in the classroom
      xStdDev:
        type: number
        description: The standard deviation of the x position of the sensor in the classroom
      y:
        type: number
        description: The y position of the sensor in the classroom
      yStdDev:
        type: number
        description: The standard deviation of the y position of the sensor in the classroom
  InteractionPeriod:
    type: object
    description: Interaction periods have a start and end time determined by examining the radio observations recorded for a given entity and another entity to find groupings that can be lumped together and represented as a single continuous segment on a timeline
    properties:
      classroom_id:
        type: integer
        description: Unique identifier for the classroom that the sensors involved belong to.
      sensor_id:
        type: integer
        description: Classroom specific sensor id of the sensor that received and recorded the accelerometer events used to generate the interaction periods.
      start_time:
        type: string
        description: The starting time of the interaction period, in iso8601 format. Example '2002-12-25T12:15:05'. If not set during a create, the current time will be used.
      end_time:
        type: string
        description: The ending time of the interaction period, in iso8601 format. Example '2002-12-25T12:15:05'.  If not set, this indicates the current mapping.
  AccelerometerEvent:
    type: object
    description: Accelerometer events occur when sensor records a specific physical movement as detected by its internal accelerometer, such as 'jostle' or 'drop'.
    properties:
      classroom_id:
        type: integer
        description: Unique identifier for the classroom that the sensors involved belong to.
      sensor_id:
        type: integer
        description: Classroom specific sensor id of the sensor that received and recorded accelerometer event.
      observed_at:
        type: string
        description: The timestamp of the event, in iso8601 format. Example '2002-12-25T12:15:05'
      event_type:
        type: string
        description: The type of accelerometer event that occured, such as 'jostle' or 'drop'.
  Area:
    type: object
    description: Describes an area of the classroom.
    properties:
      classroom_id:
        type: integer
        description: Unique identifier for the classroom that the area describes.
      name:
        type: string
        description: Name of the area.
      x_position:
        type: number
        description: The area's x coordinate within its classroom
      y_position:
        type: number
        description: The area's y coordinate within its classroom
      z_position:
        type: number
        description: The area's z coordinate within its classroom
  Material:
    type: object
    description: Classroom materials that children engage with for lessons.
    properties:
      classroom_id:
        type: integer
        description: Unique identifier for the classroom that the material is in.
      name:
        type: string
        description: Name of the material.
      lesson_id:
        type: integer
        description: Reference linking this material to a lesson in Transparent Classroom.
  Classroom:
    type: object
    description: Describes a classroom. This endpoint is currently backed by Transparent Classroom.
    properties:
      id:
        type: integer
        description: Unique identifier for the classroom.
      name:
        type: string
        description: Name of the classroom.
      lesson_set_id:
        type: integer
        description: Unique identifier for this class' lesson set.
